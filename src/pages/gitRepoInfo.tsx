import { useState } from 'react';
import Head from "next/head";
import { type NextPage } from "next";
import { Octokit } from '@octokit/core';
import MainHeader from "@/layout/Header.component";
import Footer from "@/layout/Footer.component";
import toast from 'react-hot-toast';

const GitRepoInfo: NextPage = () => {
  const [repoOwner, setRepoOwner] = useState('');
  const [repoName, setRepoName] = useState('');
  const [contributors, setContributors] = useState<any[]>([]);
  const [topContributors, setTopContributors] = useState<any[]>([]);
  const [linesAdded, setLinesAdded] = useState(0);
  const [linesDeleted, setLinesDeleted] = useState(0);

  const notifyPageMissing = () => toast('This page is coming soon!');
  const HeaderLinks = [ 'Privacy Policy', /*'How to Contribute' /*'Home', 'Features', 'About', 'Support', 'People', 'News & Features'*/];

  const fetchRepoInfo = async () => { 

    const octokit = new Octokit({
      auth: process.env.GITHUB_ACCESS_TOKEN,
    })
    // contributors
    try {
      const response = await octokit.request(`GET /repos/${repoOwner}/${repoName}/contributors`, {
        owner: `${repoOwner}`,
        repo: `${repoName}`,
        headers: {
          'X-GitHub-Api-Version': '2022-11-28'
        }
      })
      if (response.status === 200) {
        const data = response.data;
        console.log(data)
        setContributors(data);
        // Set the top 10 contributors based on the number of contributions
        setTopContributors(data.slice(0, 10));
      } else {
        // Handle non-200 status code
        console.error('API request failed with status:', response.status);
      } 

    } catch (error) {
      console.error(error);
    }
   // commits
   setLinesAdded(0)
   setLinesDeleted(0)
    try {
      const response = await octokit.request(`GET /repos/${repoOwner}/${repoName}/commits`, {
        owner: `${repoOwner}`,
        repo: `${repoName}`,
        headers: {
          'X-GitHub-Api-Version': '2022-11-28'
        }
      })

      if (response.status === 200) {
        const commits = response.data;

        for (const commit of commits) {
          const commitResponse = await octokit.request(`GET /repos/${repoOwner}/${repoName}/commits/${commit.sha}`, {
              owner: 'OWNER',
              repo: 'REPO',
              ref: 'REF',
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            })
          const filesChanged = commitResponse.data.stats;
          setLinesAdded((prev)=>prev+filesChanged.additions);
          setLinesDeleted((prev)=>prev+filesChanged.deletions);
        }
      } else {
        // Handle non-200 status code
        console.error('API request failed with status:', response.status);
      }
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <>
      <Head>
          <title>Soundscape for Everyone</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/Soundscape_Logo.svg" />
      </Head>
      <main className="flex min-h-screen w-full flex-col bg-grey-bg mt-header-gap font-poppins overflow-x-hidden">
        <MainHeader headerLinks={HeaderLinks} notifyPageMissing = {notifyPageMissing}/>
        <div className='px-10 py-10'>
          <div className="flex space-x-4">
              <input
                className="text-xs w-96 border border-gray-300 px-4 py-2 rounded-md shadow-sm focus:outline-none focus:border-blue-500"
                type="text"
                value={repoOwner}
                onChange={(e) => setRepoOwner(e.target.value)}
                placeholder="Enter repository owner"
              />
              <input
                className="text-xs w-96 border border-gray-300 px-4 py-2 rounded-md shadow-sm focus:outline-none focus:border-blue-500"
                type="text"
                value={repoName}
                onChange={(e) => setRepoName(e.target.value)}
                placeholder="Enter repository name"
              />
              <button
                className="px-6 py-3 rounded-md bg-gradient-to-r from-blue-500 to-indigo-500 text-black font-semibold shadow-md hover:shadow-lg focus:outline-none focus:ring focus:ring-blue-200"
                onClick={fetchRepoInfo}
              >
                Get Repo Info
              </button>
          </div>

          {/* Display the contributors and top 10 contributors here */}
          <div>
            <h2>Unique Contributors: {contributors.length}</h2>
            <h2>Lines Added: {linesAdded}</h2>
            <h2>Lines Deleted: {linesDeleted}</h2>
            <h2>Top 10 Contributors:</h2>
            <ol className="list-decimal pl-4">
              {topContributors.map((contributor) => (
                <li key={contributor.login}>{contributor.login}</li>
              ))}
            </ol>
          </div>
        </div>
        <div className="flex w-full h-auto bg-white py-28
                        tv:px-20 desktop:px-20 laptop:px-20 s-laptop:px-20 tablet:px-10 mobile:px-10">
          <div className="flex flex-row flex-wrap w-full h-auto">
            <div className="flex flex-col desktop:basis-1/2 laptop:basis-full s-laptop:basis-full tablet-basis:full py-12 gap-6">
              <h2 className="section-title-orange2 w-fit bg-transparent py-2 font-semibold leading-normal text-orange text-features-title">Contributors</h2>
              <p className="font-work-sans text-dark-grey text-xl leading-8">
                  All these amazing contributors made this possible. Come join our community on <a href="https://github.com/rcos/soundscape-main-website" className="underline" >GitHub</a>!
              </p>
              <div className="grid grid-cols-5">
                  {contributors.map((user) => (
                      <a key={user.id} href={user.html_url} target="_blank" rel="noopener noreferrer">
                        <img
                          src={user.avatar_url}
                          className="w-full rounded-full cursor-pointer"
                        />
                      </a>
                  ))}
              </div>
            </div> 
            <div className="flex flex-col desktop:basis-1/2 laptop:basis-full s-laptop:basis-full tablet-basis:full pt-36 gap-6 w-full h-80 overflow-y-auto">
              {topContributors.map((contributor) => (
                <div key={contributor.login} className="flex items-center mb-2">
                  <img
                    src={contributor.avatar_url}
                    alt={contributor.login}
                    className="w-8 h-8 rounded-full mr-2"
                  />
                  <div>
                    <p>{contributor.login}</p>
                    <p>Lines Added: {contributor.additions}</p>
                    <p>Lines Deleted: {contributor.deletions}</p>
                  </div>
                </div>
              ))}
            </div>        
          </div>
          
        </div>
        <Footer headerLinks={HeaderLinks} notifyPageMissing={notifyPageMissing}/>
      </main>
    </>

  );
};

export default GitRepoInfo;
